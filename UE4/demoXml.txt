
########################################################################
#                                                                       
# 1. Test si un document est bien formé                                 
#    dbf.xml : document bien formé                                      
#    dmf.xml : document mal  formé                                      
#                                                                       
########################################################################

# 1a. en perl
testebfpe
   syntaxe : testebf fichier

testebfpe dbf.xml
<xsd:schema targetNamespace="http://www.interieur.gouv.fr/ACTES#v1.1-20040216" xmlns:insee="http://xml.insee.fr/schema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:actes="http://www.interieur.gouv.fr/ACTES#v1.1-20040216" elementFormDefault="qualified" attributeFormDefault="qualified">
	<xsd:import namespace="http://xml.insee.fr/schema" schemaLocation="siret.xsd"></xsd:import>
	<xsd:attribute name="Arrondissement">
		<xsd:annotation>
			<xsd:documentation>Numéro à 1 chiffre </xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:nonNegativeInteger">
				<xsd:pattern value="[0-9]{1}"></xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name="Departement">
		<xsd:annotation>
			<xsd:documentation>Departement (3 chiffres ou 2 chiffres + A ou B)</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:annotation>
				<xsd:documentation>Departement (3 caractères)</xsd:documentation>
			</xsd:annotation>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="[0|9]{1}[0-9]{1}[A|B|0-9]{1}"></xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name="CodeNatureActe">
		<xsd:annotation>
			<xsd:documentation>Code nature d'acte</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer"></xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name="CodeMatiere">
		<xsd:annotation>
			<xsd:documentation>Code d'une sous-matière</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer"></xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name="IDActe">
		<xsd:annotation>
			<xsd:documentation>Identifiant unique d'un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="[0|9]{1}[0-9]{1}[A|B|0-9]{1}-[0-9]{9}-[0-9]{8}-[a-zA-Z0-9_]{1,15}-[\p{Lu}]{2}"></xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:element name="IDSGAR">
		<xsd:annotation>
			<xsd:documentation>Identifiant d'un SGAR</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="actes:Departement" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="IDPref">
		<xsd:annotation>
			<xsd:documentation>Identifiant d'une préfecture</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="actes:Departement" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="IDSousPref">
		<xsd:annotation>
			<xsd:documentation>Identifiant d'une sous-préfecture</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="actes:Departement" use="required"></xsd:attribute>
			<xsd:attribute ref="actes:Arrondissement" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="IDCL">
		<xsd:annotation>
			<xsd:documentation>Identifiant d'une collectivité</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="insee:SIREN" use="required"></xsd:attribute>
			<xsd:attribute ref="actes:Departement" use="required"></xsd:attribute>
			<xsd:attribute ref="actes:Arrondissement" use="required"></xsd:attribute>
			<xsd:attribute name="Nature" use="required">
				<xsd:annotation>
					<xsd:documentation>Code nature de la collectivité</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:nonNegativeInteger">
						<xsd:pattern value="[0-9]{2}"></xsd:pattern>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="Email">
		<xsd:annotation>
			<xsd:documentation>Adresse e-mail</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[_a-zA-Z0-9\-]+(\.[_a-zA-Z0-9\-]+)*@[a-zA-Z0-9\-]+(\.[a-zA-Z0-9\-]+)*\.[a-zA-Z]{2,6}"></xsd:pattern>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Matiere">
		<xsd:annotation>
			<xsd:documentation>Matiere d'un acte (Code et libellé)</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
		<xsd:attribute name="Libelle" type="xsd:string" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DonneesEnveloppeCLMISILL">
		<xsd:annotation>
			<xsd:documentation>Donnees contenues dans une enveloppe de transmission collectivité vers MISILL</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Emetteur">
				<xsd:annotation>
					<xsd:documentation>Renseignements concernant l'émetteur</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element ref="actes:IDCL"></xsd:element>
						<xsd:element ref="actes:Referent" minOccurs="0"></xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="AdressesRetour">
				<xsd:annotation>
					<xsd:documentation>Groupe d'adresses</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence maxOccurs="unbounded">
						<xsd:element name="Email" type="actes:Email">
							<xsd:annotation>
								<xsd:documentation>adresse email  à utiliser pour les envois de la préfecture vers la collectivité</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element ref="actes:FormulairesEnvoyes">
				<xsd:annotation>
					<xsd:documentation>Liste des fichiers XML envoyés</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DonneesActe">
		<xsd:annotation>
			<xsd:documentation>Donnees associees a un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="CodeMatiere1">
				<xsd:annotation>
					<xsd:documentation>Code matière 1</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CodeMatiere2">
				<xsd:annotation>
					<xsd:documentation>Code matière 2</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CodeMatiere3" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Code matière 3</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CodeMatiere4" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Code matière 4</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CodeMatiere5" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Code matière 5</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:CodeMatiere" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Objet">
				<xsd:annotation>
					<xsd:documentation>texte max 500 caractères</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="500"></xsd:maxLength>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="PrecedentIdentifiantActe" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Identifiant acte déjà transmis</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="ClassificationDateVersion" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>date de la classification utilisée </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Document" type="actes:FichierSigne">
				<xsd:annotation>
					<xsd:documentation>Document acte</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Annexes">
				<xsd:annotation>
					<xsd:documentation>Pièces jointes</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="Annexe" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
					<xsd:attribute name="Nombre" type="xsd:nonNegativeInteger" use="required">
						<xsd:annotation>
							<xsd:documentation>Nombre total d'annexes à l'acte</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="Date" type="xsd:date" use="required">
			<xsd:annotation>
				<xsd:documentation>Date de la décision</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="NumeroInterne" use="required">
			<xsd:annotation>
				<xsd:documentation>Numero interne collectivité, 15 caractères maximum</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:maxLength value="15"></xsd:maxLength>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute ref="actes:CodeNatureActe" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DonneesCourrierPref">
		<xsd:annotation>
			<xsd:documentation>Données relatives à un courrier de la préfecture (courrier simple, lettre d'observations, demande de pieces complementaires): identifiant de l'acte + date du courrier</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
		<xsd:attribute name="DateCourrierPref" type="xsd:date" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ARReponseCL">
		<xsd:annotation>
			<xsd:documentation>Données d'un AR d'une réponse d'une collectivité au courrier d'une préfecture (envoi ou refus d'envoyer des pièces complémentaires, réponse ou rejet pour une lettre d'observations)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="InfosCourrierPref" type="actes:DonneesCourrierPref"></xsd:element>
		</xsd:sequence>
		<xsd:attribute name="DateReception" type="xsd:date" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FichierSigne">
		<xsd:annotation>
			<xsd:documentation>Nom du fichier et éventuellement la signature du fichier</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="NomFichier" type="xsd:string"></xsd:element>
			<xsd:element name="Signature" type="xsd:anyType" minOccurs="0"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FichiersSignes">
		<xsd:annotation>
			<xsd:documentation>Ensemble de fichiers signés</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Referent">
		<xsd:annotation>
			<xsd:documentation>Nom et coordonées d'un référent</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Nom" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Nom du référent</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Telephone" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Téléphone</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Email" type="actes:Email" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Adresse e-mail</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FormulairesEnvoyes">
		<xsd:annotation>
			<xsd:documentation>Liste des fichiers XML envoyés</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element name="Formulaire" type="actes:FichierSigne"></xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="EnveloppeCLMISILL" type="actes:DonneesEnveloppeCLMISILL">
		<xsd:annotation>
			<xsd:documentation>Enveloppe de transmission collectivité vers MISILL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EnveloppeMISILLCL">
		<xsd:annotation>
			<xsd:documentation>Enveloppe de transmission MISILL vers collectivité</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Emetteur">
					<xsd:annotation>
						<xsd:documentation>Renseignements concernant l'émetteur</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="actes:IDSGAR"></xsd:element>
								<xsd:element ref="actes:IDPref"></xsd:element>
								<xsd:element ref="actes:IDSousPref"></xsd:element>
							</xsd:choice>
							<xsd:element ref="actes:Referent" minOccurs="0"></xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="actes:FormulairesEnvoyes">
					<xsd:annotation>
						<xsd:documentation>Liste des fichiers XML envoyés</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Destinataire">
					<xsd:annotation>
						<xsd:documentation>Identification de la collectivité destinataire du contenu de l'enveloppe</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute ref="insee:SIREN" use="required"></xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AnomalieEnveloppe">
		<xsd:annotation>
			<xsd:documentation>Anomalie dans une enveloppe</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Date" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>Date d'envoi de l'anomalie</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Nature">
					<xsd:annotation>
						<xsd:documentation>Nature de l'anomalie</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:integer">
							<xsd:enumeration value="001"></xsd:enumeration>
							<xsd:enumeration value="002"></xsd:enumeration>
							<xsd:enumeration value="003"></xsd:enumeration>
							<xsd:enumeration value="004"></xsd:enumeration>
							<xsd:enumeration value="005"></xsd:enumeration>
							<xsd:enumeration value="100"></xsd:enumeration>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="Detail" type="xsd:string" minOccurs="0"></xsd:element>
				<xsd:element name="EnveloppeRecue" type="actes:DonneesEnveloppeCLMISILL"></xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Acte" type="actes:DonneesActe">
		<xsd:annotation>
			<xsd:documentation>Transmission d'un acte</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ARActe">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception de la transmission d'un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="ActeRecu" type="actes:DonneesActe"></xsd:element>
				<xsd:element name="ClassificationDateVersionEnCours" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>date de la version de la classification 
en sous-matières acceptée par la préfecture</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
			<xsd:attribute name="DateReception" type="xsd:date" use="required">
				<xsd:annotation>
					<xsd:documentation>Date de réception de l'acte</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AnomalieActe">
		<xsd:annotation>
			<xsd:documentation>Anomalie dans la transmission d'un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Date" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>Date de notification anomalie</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Nature">
					<xsd:annotation>
						<xsd:documentation>Nature de l'anomalie (code sur 3 chiffres)</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:nonNegativeInteger">
							<xsd:pattern value="[0-9]{3}"></xsd:pattern>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="Detail" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>texte libre facultatif</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ActeRecu" type="actes:DonneesActe"></xsd:element>
				<xsd:element name="ClassificationDateVersionEnCours" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>date de la version de la classification 
en sous-matières acceptée par la préfecture</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CourrierSimple">
		<xsd:annotation>
			<xsd:documentation>Transmission d'un courrier simple</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReponseCourrierSimple">
		<xsd:annotation>
			<xsd:documentation>Réponse à un courrier simple</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DemandePieceComplementaire">
		<xsd:annotation>
			<xsd:documentation>Demande de pièces complémentaires</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="DescriptionPieces" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>Texte libre</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ARDemandePieceComplementaire" type="actes:DonneesCourrierPref">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception de demande de pièces complémentaires</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RefusPieceComplementaire">
		<xsd:annotation>
			<xsd:documentation>Refus explicite d'envoi de pièces complémentaires</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PieceComplementaire">
		<xsd:annotation>
			<xsd:documentation>Transmission de pièces complémentaires</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Documents" type="actes:FichiersSignes"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ARPieceComplementaire" type="actes:ARReponseCL">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception d'envoi (ou de refus explicite d'envoi) de pièces complémentaires</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="LettreObservations">
		<xsd:annotation>
			<xsd:documentation>Lettre d'observations</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Motif" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>Texte libre</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ARLettreObservations" type="actes:DonneesCourrierPref">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception de lettre d'observations</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RejetLettreObservations">
		<xsd:annotation>
			<xsd:documentation>Refus explicite de répondre à une lettre d'observations</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReponseLettreObservations">
		<xsd:annotation>
			<xsd:documentation>Réponse à une lettre d'observations</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="actes:DonneesCourrierPref">
					<xsd:sequence>
						<xsd:element name="Document" type="actes:FichierSigne"></xsd:element>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ARReponseRejetLettreObservations" type="actes:ARReponseCL">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception d'une réponse (ou d'un refus explicite de répondre) à une lettre d'observations</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DefereTA">
		<xsd:annotation>
			<xsd:documentation>Information de déféré au tribunal administratif</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="DateDepot" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>Date dépôt déféré TA</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="NatureIllegalite" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Nature de l'illégalité, motif du déféré au TA (texte libre)</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="PiecesJointes">
					<xsd:annotation>
						<xsd:documentation>Document(s) du déféré au TA</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence minOccurs="0" maxOccurs="unbounded">
							<xsd:element name="PieceJointe" type="actes:FichierSigne"></xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Annulation">
		<xsd:annotation>
			<xsd:documentation>Annulation de la transmission d'un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ARAnnulation">
		<xsd:annotation>
			<xsd:documentation>Accusé de réception de l'annulation de la transmission d'un acte</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute ref="actes:IDActe" use="required"></xsd:attribute>
			<xsd:attribute name="DateReception" type="xsd:date" use="required"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DemandeClassification">
		<xsd:annotation>
			<xsd:documentation>Demande de classification</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence minOccurs="0">
				<xsd:element name="DateClassification" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>Date de la classification utilisée dans la collectivité</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReponseClassificationSansChangement">
		<xsd:annotation>
			<xsd:documentation>Information: classification utilisée à jour</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="DateClassification" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>date de la classification</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RetourClassification">
		<xsd:annotation>
			<xsd:documentation>Transmission de la classification</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="DateClassification" type="xsd:date">
					<xsd:annotation>
						<xsd:documentation>date de la classification</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="NaturesActes">
					<xsd:complexType>
						<xsd:sequence maxOccurs="unbounded">
							<xsd:element name="NatureActe">
								<xsd:complexType>
									<xsd:attribute ref="actes:CodeNatureActe"></xsd:attribute>
									<xsd:attribute name="Libelle" type="xsd:string" use="required"></xsd:attribute>
									<xsd:attribute name="TypeAbrege" use="required">
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:length value="2"></xsd:length>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Matieres">
					<xsd:complexType>
						<xsd:sequence maxOccurs="unbounded">
							<xsd:element name="Matiere1">
								<xsd:complexType>
									<xsd:complexContent>
										<xsd:extension base="actes:Matiere">
											<xsd:sequence maxOccurs="unbounded">
												<xsd:element name="Matiere2">
													<xsd:complexType>
														<xsd:complexContent>
															<xsd:extension base="actes:Matiere">
																<xsd:sequence minOccurs="0" maxOccurs="unbounded">
																	<xsd:element name="Matiere3">
																		<xsd:complexType>
																			<xsd:complexContent>
																				<xsd:extension base="actes:Matiere">
																					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
																						<xsd:element name="Matiere4">
																							<xsd:complexType>
																								<xsd:complexContent>
																									<xsd:extension base="actes:Matiere">
																										<xsd:sequence minOccurs="0" maxOccurs="unbounded">
																											<xsd:element name="Matiere5" type="actes:Matiere"></xsd:element>
																										</xsd:sequence>
																									</xsd:extension>
																								</xsd:complexContent>
																							</xsd:complexType>
																						</xsd:element>
																					</xsd:sequence>
																				</xsd:extension>
																			</xsd:complexContent>
																		</xsd:complexType>
																	</xsd:element>
																</xsd:sequence>
															</xsd:extension>
														</xsd:complexContent>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:extension>
									</xsd:complexContent>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>

Le document nommé dbf.xml est bien formé.


testebfpe dmf.xml
<?xml-stylesheet type="text/xsl" href="titres.xsl"?><FILMS>
<FILM Annee="1958">
<TITRE>Vertigo</TITRE>
<GENRE>Drame</GENRE><PAYS>USA</PAYS><MES idref="3"></MES>
<ROLES>
<ROLE><PRENOM>James</PRENOM><NOM>Stewart</NOM>
<INTITULE>John Ferguson</INTITULE></ROLE><ROLE><PRENOM>Kim</PRENOM><NOM>Novak</NOM>
<INTITULE>Madeleine Elster</INTITULE></ROLE></ROLES>
<RESUME>Scottie Ferguson, ancien inspecteur de police, est sujet au vertige depuis qu'il a vu mourir son
 collègue. Elster, son ami, le charge de surveiller sa femme, Madeleine, ayant des tendances
 suicidaires. Amoureux de la jeune femme Scottie ne remarque pas le piège qui se trame autour
 de lui et dont il va être la victime... </RESUME>
</FILM>
<FILM Annee="1979">
<TITRE>Alien</TITRE>
<GENRE>Science-fiction</GENRE><PAYS>USA</PAYS><MES idref="4"></MES>
<ROLES>
<ROLE><PRENOM>Sigourney</PRENOM><NOM>Weaver</NOM>
<INTITULE>Ripley</INTITULE></ROLE></ROLES>
<RESUME>Près d'un vaisseau spatial échoué sur une lointaine planète, des Terriens en mission découvrent
 de bien étranges "oeufs". Ils en ramènent un à bord, ignorant qu'ils viennent d'introduire parmi
 eux un huitième passager particulièrement féroce et meurtrier. </RESUME>
</FILM>
<FILM Annee="1997">
<TITRE>Titanic</TITRE>
<GENRE>Drame</GENRE><PAYS>USA</PAYS><MES idref="6"></MES>
<ROLES>
<ROLE><PRENOM>Kate</PRENOM><NOM>Winslet</NOM>
<INTITULE>Rose DeWitt Bukater</INTITULE></ROLE><ROLE><PRENOM>Leonardo</PRENOM><NOM>DiCaprio</NOM>
<INTITULE>Jack Dawson</INTITULE></ROLE></ROLES>
<RESUME>Conduite par Brock Lovett, une expédition américaine fouillant l'épave du Titanic remonte à la
 surface le croquis d'une femme nue. Alertée par les médias la dame en question, Rose DeWitt
 Bukater, aujourd'hui centenaire, rejoint les lieux du naufrage, d'où elle entreprend de conter le
 récit de son fascinant, étrange et tragique voyage... </RESUME>
</FILM>
<FILM Annee="1986">
<TITRE>Sacrifice</TITRE>
<GENRE>Drame</GENRE><PAYS>FR</PAYS><MES idref="9"></MES>
<ROLES>
</ROLES>
</FILM>
<FILM Annee="1997">
<TITRE>Volte/Face</TITRE>
<GENRE>Action</GENRE><PAYS>USA</PAYS><MES idref="10"></MES>
<ROLES>
<ROLE><PRENOM>John</PRENOM><NOM>Travolta</NOM>
<INTITULE>Sean Archer/Castor Troy</INTITULE></ROLE><ROLE><PRENOM>Nicolas</PRENOM><NOM>Cage</NOM>
<INTITULE>Castor Troy/Sean Archer</INTITULE></ROLE></ROLES>
<RESUME>Directeur d'une unité anti-terroriste, Sean Archer recherche Castor Troy, un criminel responsable de la
 mort de son fils six ans plus tôt. Il parvient à l'arrêter mais apprend que Troy a caché une bombe au Palais
 des Congrès de Los Angeles. Seul le frère de Troy peut la désamorcer et, pour l'approcher, Archer se fait
 greffer le visage de Troy. </RESUME>
</FILM>
<FILM Annee="1999">
<TITRE>Sleepy Hollow</TITRE>
<GENRE>Fantastique</GENRE><PAYS>USA</PAYS><MES idref="13"></MES>
<ROLES>
<ROLE><PRENOM>Johnny</PRENOM><NOM>Depp</NOM>
<INTITULE>Constable Ichabod Crane</INTITULE></ROLE><ROLE><PRENOM>Christina</PRENOM><NOM>Ricci</NOM>
<INTITULE>Katrina Anne Van Tassel</INTITULE></ROLE><ROLE><PRENOM>Christopher</PRENOM><NOM>Walken</NOM>
<INTITULE>Le cavalier</INTITULE></ROLE></ROLES>
<RESUME>Nouvelle Angleterre, 1799. A Sleepy Hollow, plusieurs cadavres sont retrouvés décapités. La
                                      rumeur attribue ces meurtres à un cavalier lui-même sans tête. Mais le fin limier
                                      new-yorkais Ichabod Crane ne croit pas en ses aberrations. Tombé sous le charme de la
                                      vénéneuse Katrina, il mène son enquête au coeur des sortilèges de Sleepy Hollow.. </RESUME>
</FILM>
<FILM Annee="1999">
<TITRE>American Beauty</TITRE>
<GENRE>Comédie</GENRE><PAYS>USA</PAYS><MES idref="17"></MES>
<ROLES>
<ROLE><PRENOM>Kevin</PRENOM><NOM>Spacey</NOM>
<INTITULE>Lester Burnham</INTITULE></ROLE><ROLE><PRENOM>Anette</PRENOM><NOM>Bening</NOM>
<INTITULE>Carolyn Burnham</INTITULE></ROLE></ROLES>
<RESUME>Lester Burnham, sa femme Carolyn et leur fille Jane mènent apparemment une vie des plus
 heureuses dans leur belle banlieue. Mais derrière cette respectable façade se tisse une étrange
 et grinçante tragi-comédie familiale où désirs inavoués, frustrations et violences refoulées
 conduiront inexorablement un homme vers la mort. </RESUME>
</FILM>
<FILM Annee="1992">
<TITRE>Impitoyable</TITRE>
<GENRE>Western</GENRE><PAYS>USA</PAYS><MES idref="20"></MES>
<ROLES>
<ROLE><PRENOM>Clint</PRENOM><NOM>Eastwood</NOM>
<INTITULE>William Munny</INTITULE></ROLE><ROLE><PRENOM>Gene</PRENOM><NOM>Hackman</NOM>
<INTITULE>Little Bill Dagget</INTITULE></ROLE><ROLE><PRENOM>Morgan</PRENOM><NOM>Freeman</NOM>
<INTITULE>Ned Logan</INTITULE></ROLE></ROLES>
<RESUME>Légendaire hors-la-loi, William Munny s'est reconverti depuis onze ans en paisible fermier. Il
 reprend néanmoins les armes pour traquer deux tueurs en compagnie de son vieil ami Ned
 Logan. Mais ce dernier est capturé, puis éxécute. L'honneur et l'amitié imposent dès lors à
 Munny de redevenir une dernière fois le héros qu'il fut jadis... </RESUME>
</FILM>
<FILM Annee="2000">
<TITRE>Gladiator</TITRE>
<GENRE>Drame</GENRE><PAYS>USA</PAYS><MES idref="4"></MES>
<ROLES>
<ROLE><PRENOM>Russell</PRENOM><NOM>Crowe</NOM>
<INTITULE>Maximus</INTITULE></ROLE></ROLES>
<RESUME>Le général romain Maximus est le plus fidèle
                    soutien de l'empereur Marc Aurèle, qu'il a
                    conduit de victoire en victoire avec une
                    bravoure et un dévouement exemplaires.
                    Jaloux du prestige de Maximus, et plus
                    encore de l'amour que lui voue l'empereur,
                    le fils de Marc-Aurèle, Commode, s'arroge
                    brutalement le pouvoir, puis ordonne
                    l'arrestation du général et son exécution.
                    Maximus échappe à ses assassins mais ne peut
                    empêcher le massacre de sa famille. Capturé
                    par un marchand d'esclaves, il devient
                    gladiateur et prépare sa vengeance.</RESUME>
</FILM>
<FILM Annee="1982">
<TITRE>Blade Runner</TITRE>
<GENRE>Action</GENRE><PAYS>USA</PAYS><MES idref="4"></MES>
<ROLES>
<ROLE><PRENOM>Harrison</PRENOM><NOM>Ford</NOM>
<INTITULE>Deckard</INTITULE></ROLE><ROLE><PRENOM>Rutger</PRENOM><NOM>Hauer</NOM>
<INTITULE>Batty</INTITULE></ROLE></ROLES>
<RESUME>En 2019, lors de la décadence de Los Angeles, des êtres synthétiques, sans pensée, sans
 émotions, suffisent aux différents travaux d'entretien. Leur durée de vie n'excède pas 4 années.
 Un jour, ces ombres humaines se révoltent et on charge les tueurs, appelés Blade Runner, de
 les abattre... </RESUME>
</FILM>
<FILM Annee="1988">
<TITRE>Piège de cristal</TITRE>
<GENRE>Action</GENRE><PAYS>USA</PAYS><MES idref="26"></MES>
<ROLES>
<ROLE><PRENOM>Bruce</PRENOM><NOM>Willis</NOM>
<INTITULE>McClane</INTITULE></ROLE></ROLES>
<RESUME>John Mc Clane, policier new-yorkais, vient passer Noel a Los Angeles aupres de sa femme.
 Dans le building ou elle travaille, il se retrouve temoin de la prise en otage de tout le personnel
 par 12 terroristes. Objectif de ces derniers, vider les coffres de la societe. Cache mais isole, il
 entreprend de prevenir l'exterieur...</RESUME>
</FILM>
<FILM Annee="1990">
<TITRE>58 minutes pour vivre</TITRE>
<GENRE>Action</GENRE><PAYS>USA</PAYS><MES idref="28"></MES>
<ROLES>
<ROLE><PRENOM>Bruce</PRENOM><NOM>Willis</NOM>
<INTITULE>McLane</INTITULE></ROLE></ROLES>
<RESUME>







 Venu attendre sa femme a l'aéroport, le policier John McClane remarque la présence de
 terroristes qui ont pris le contrôle des pistes, empêchant tout avion d'atterrir et menaçant de
 laisser les appareils en vol tourner jusqu'à épuisement de leur kérosène. John n'a devant lui que
 58 minutes pour éviter la catastrophe... </RESUME>
</FILM>
<FILM Annee="1990">
<TITRE>Van Gogh</TITRE>
<GENRE>Drame</GENRE><PAYS>FR</PAYS><MES idref="29"></MES>
<ROLES>
<ROLE><PRENOM>Jacques</PRENOM><NOM>Dutronc</NOM>
<INTITULE>Van Gogh</INTITULE></ROLE></ROLES>
<RESUME>Les derniers jours de la vie de Vincent Van Gogh, réfugié à Auvers-sur-Oise, près de chez son
 ami et protecteur le docteur Gachet, un ami de son frère Théo. Ce peintre maudit, que les
 villageois surnommaient "le fou", n'ava
 Document dmf.xml mal formé : 
		 
mismatched tag at line 219, column 43, byte 11057 at /usr/lib/perl5/XML/Parser.pm line 187


it alors plus que deux mois à vivre, qu'il passa en
 peignant un tableau par jour. </RESUME>
</FILM>
<FILM Annee="1995">
<TITRE>Seven</TITRE>
<GENRE>Policier</GENRE><PAYS>USA</PAYS><MES idref="31"></MES>
<ROLES>
<ROLE><PRENOM>Kevin</PRENOM><NOM>Spacey</NOM>
<INTITULE>Doe</INTITULE></ROLE><ROLE><PRENOM>Morgan</PRENOM><NOM>Freeman</NOM>
<INTITULE>Somerset</INTITULE></ROLE><ROLE><PRENOM>Brad</PRENOM><NOM>Pitt</NOM>
<INTITULE>Mills</INTITULE></ROLE></ROLES>
<RESUME>A New York, un criminel anonyme a décidé de commettre 7 meurtres basés sur les 7 pêchés
 capitaux énoncés dans la Bible : gourmandise, avarice, paresse, orgueil, luxure, envie et colère.
 Vieux flic blasé à 7 jours de la retraite, l'inspecteur Somerset mène l'enquête tout en formant
 son remplaçant, l'ambitieux inspecteur David Mills... </RESUME>
</FILM>
<FILM Annee="1995">
<TITRE>L'armée des douze singes</TITRE>
<GENRE>Science-fiction</GENRE><PAYS>USA</PAYS><MES idref="33"></MES>
<ROLES>
<ROLE><PRENOM>Bruce</PRENOM><NOM>Willis</NOM>
<INTITULE>Cole</INTITULE></ROLE></ROLES>
</FILM>
<FILM Annee="1986">
<TITRE>Le nom de la rose</TITRE>
<GENRE>Policier</GENRE><PAYS>FR</PAYS><MES idref="34"></MES>
<ROLES>
<ROLE><PRENOM>Sean</PRENOM><NOM>Connery</NOM>
<INTITULE>Baskerville</INTITULE></ROLE><ROLE><PRENOM>Christian</PRENOM><NOM>Slater</NOM>
<INTITULE>de Melk</INTITULE></ROLE></ROLES>
<RESUME>En l'an 1327, dans une abbaye bénédictine, le moine franciscain Guillaume de Baskerville,
 accompagné de son jeune novice Adso, enquête sur de mystérieuses morts qui frappent la
 confrérie. Le secret semble résider dans la bibliothèque, où le vieux Jorge garde jalousement un
 livre jugé maudit. </RESUME>
</FILM>
<FILM Annee="1994">
<TITRE>Pulp fiction</TITRE>
<GENRE>Action</GENRE><PAYS>USA</PAYS><MES idref="37"></MES>
<ROLES>
<ROLE><PRENOM>John</PRENOM><NOM>Travolta</NOM>
<INTITULE>Vincent Vega</INTITULE></ROLE><ROLE><PRENOM>Bruce</PRENOM><NOM>Willis</NOM>
<INTITULE>Butch Coolidge</INTITULE></ROLE><ROLE><PRENOM>Samuel L.</PRENOM><NOM>Jackson</NOM>
<INTITULE>Jules Winnfield</INTITULE></ROLE><ROLE><PRENOM>Rosanna</PRENOM><NOM>Arquette</NOM>
<INTITULE>Jody</INTITULE></ROLE><ROLE><PRENOM>Uma</PRENOM><NOM>Thurman</NOM>
<INTITULE>Mia Wallace</INTITULE></ROLE></ROLES>
<RESUME>Pulp Fiction décrit l'odyssée sanglante et burlesque de petits malfrats dans la jungle de
 Hollywood, ou s'entrecroisent les destins de deux petits tueurs, d'un dangereux gangster marié
 à une camée, d'un boxeur roublard, de prêteurs sur gages sadiques, d'un caïd élégant et
 dévoué, d'un dealer bon mari et de deux tourtereaux à la gachette facile... </RESUME>
</FILM>
<FILM Annee="1998">
<TITRE>Mary à tout prix</TITRE>
<GENRE>Comédie</GENRE><PAYS>USA</PAYS><MES idref="41"></MES>
<ROLES>
<ROLE><PRENOM>Cameron</PRENOM><NOM>Diaz
<INTITULE>Mary Jensen Matthews</INTITULE>
# 1b. en php
testebfph
testebf.php (gH) 2012
  syntaxe : testebfph fichierXML 
  exemple : testebfph dmf.xml 
testebfph dbf.xml
Document dbf.xml bien formÃ©
testebfph dmf.xml
PHP Warning:  DOMDocument::load(): Opening and ending tag mismatch: NOM line 218 and ROLE in /home/gh/public_html/tuteurs/dmf.xml, line: 219 in /home/gh/Bin/testebf.php on line 26
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testebf.php:0
PHP   2. DOMDocument->load() /home/gh/Bin/testebf.php:26
PHP Warning:  DOMDocument::load(): expected '>' in /home/gh/public_html/tuteurs/dmf.xml, line: 220 in /home/gh/Bin/testebf.php on line 26
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testebf.php:0
PHP   2. DOMDocument->load() /home/gh/Bin/testebf.php:26
PHP Warning:  DOMDocument::load(): Opening and ending tag mismatch: ROLES line 217 and FILM in /home/gh/public_html/tuteurs/dmf.xml, line: 225 in /home/gh/Bin/testebf.php on line 26
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testebf.php:0
PHP   2. DOMDocument->load() /home/gh/Bin/testebf.php:26
PHP Warning:  DOMDocument::load(): expected '>' in /home/gh/public_html/tuteurs/dmf.xml, line: 705 in /home/gh/Bin/testebf.php on line 26
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testebf.php:0
PHP   2. DOMDocument->load() /home/gh/Bin/testebf.php:26
PHP Warning:  DOMDocument::load(): Premature end of data in tag FILMS line 3 in /home/gh/public_html/tuteurs/dmf.xml, line: 706 in /home/gh/Bin/testebf.php on line 26
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testebf.php:0
PHP   2. DOMDocument->load() /home/gh/Bin/testebf.php:26

 Erreur, document dmf.xml mal formÃ©
# 1c. en java
# 1d. avec rxp
rxp -h
usage: rxp [-abemnNsStvVx] [-o b|0|1|2|3] [-c encoding] [-u base_uri] [url]
rxp -s dbf.xml
rxp -s dmf.xml
Error: Mismatched end tag: expected </NOM>, got </ROLE>
 in unnamed entity at line 219 char 48 of file:///home/gh/public_html/tuteurs/dmf.xml
# 1e. avec xmllint
xmllint
Usage : xmllint [options] XMLfiles ...
	Parse the XML files and output the result of the parsing
	--version : display the version of the XML library used
	--debug : dump a debug tree of the in-memory document
	--shell : run a navigating shell
	--debugent : debug the entities defined in the document
	--copy : used to test the internal copy implementation
	--recover : output what was parsable on broken XML documents
	--huge : remove any internal arbitrary parser limits
	--noent : substitute entity references by their value
	--noout : don't output the result tree
	--path 'paths' : provide a set of paths for resources
	--load-trace : print trace of all external entites loaded
	--nonet : refuse to fetch DTDs or entities over network
	--nocompact : do not generate compact text nodes
	--htmlout : output results as HTML
	--nowrap : do not put HTML doc wrapper
	--valid : validate the document in addition to std well-formed check
	--postvalid : do a posteriori validation, i.e after parsing
	--dtdvalid URL : do a posteriori validation against a given DTD
	--dtdvalidfpi FPI : same but name the DTD with a Public Identifier
	--timing : print some timings
	--output file or -o file: save to a given file
	--repeat : repeat 100 times, for timing or profiling
	--insert : ad-hoc test for valid insertions
	--compress : turn on gzip compression of output
	--html : use the HTML parser
	--xmlout : force to use the XML serializer when using --html
	--push : use the push mode of the parser
	--memory : parse from memory
	--maxmem nbbytes : limits memory allocation to nbbytes bytes
	--nowarning : do not emit warnings from parser/validator
	--noblanks : drop (ignorable?) blanks spaces
	--nocdata : replace cdata section with text nodes
	--format : reformat/reindent the input
	--encode encoding : output in the given encoding
	--dropdtd : remove the DOCTYPE of the input docs
	--c14n : save in W3C canonical format v1.0 (with comments)
	--c14n11 : save in W3C canonical format v1.1 (with comments)
	--exc-c14n : save in W3C exclusive canonical format (with comments)
	--nsclean : remove redundant namespace declarations
	--testIO : test user I/O support
	--catalogs : use SGML catalogs from $SGML_CATALOG_FILES
	             otherwise XML Catalogs starting from 
	         file:///etc/xml/catalog are activated by default
	--nocatalogs : deactivate all catalogs
	--auto : generate a small doc on the fly
	--xinclude : do XInclude processing
	--noxincludenode : same but do not generate XInclude nodes
	--nofixup-base-uris : do not fixup xml:base uris
	--loaddtd : fetch external DTD
	--dtdattr : loaddtd + populate the tree with inherited attributes 
	--stream : use the streaming interface to process very large files
	--walker : create a reader and walk though the resulting doc
	--pattern pattern_value : test the pattern support
	--chkregister : verify the node registration code
	--relaxng schema : do RelaxNG validation against the schema
	--schema schema : do validation against the WXS schema
	--schematron schema : do validation against a schematron
	--sax1: use the old SAX1 interfaces for processing
	--sax: do not build a tree but work just at the SAX level
	--oldxml10: use XML-1.0 parsing rules before the 5th edition

Libxml project home page: http://xmlsoft.org/
To report bugs or get some help check: http://xmlsoft.org/bugs.html
xmllint --noout dbf.xml
xmllint --noout dmf.xml
dmf.xml:219: parser error : Opening and ending tag mismatch: NOM line 218 and ROLE
<INTITULE>Mary Jensen Matthews</INTITULE></ROLE><ROLE><PRENOM>Mat</PRENOM><NOM>D
                                                ^
dmf.xml:220: parser error : expected '>'
<INTITULE>Pat Healy</INTITULE></ROLE></ROLES>
                                           ^
dmf.xml:225: parser error : Opening and ending tag mismatch: ROLES line 217 and FILM
</FILM>
       ^
dmf.xml:705: parser error : expected '>'
</FILMS>
      ^
dmf.xml:706: parser error : Premature end of data in tag FILMS line 3

^
xmlstarlet
XMLStarlet Toolkit: Command line utilities for XML
Usage: xml [<options>] <command> [<cmd-options>]
where <command> is one of:
  ed    (or edit)      - Edit/Update XML document(s)
  sel   (or select)    - Select data or query XML document(s) (XPATH, etc)
  tr    (or transform) - Transform XML document(s) using XSLT
  val   (or validate)  - Validate XML document(s) (well-formed/DTD/XSD/RelaxNG)
  fo    (or format)    - Format XML document(s)
  el    (or elements)  - Display element structure of XML document
  c14n  (or canonic)   - XML canonicalization
  ls    (or list)      - List directory as XML
  esc   (or escape)    - Escape special XML characters
  unesc (or unescape)  - Unescape special XML characters
  pyx   (or xmln)      - Convert XML into PYX format (based on ESIS - ISO 8879)
  p2x   (or depyx)     - Convert PYX into XML
<options> are:
  --version            - show version
  --help               - show help
Wherever file name mentioned in command help it is assumed
that URL can be used instead as well.

Type: xml <command> --help <ENTER> for command help

XMLStarlet is a command line toolkit to query/edit/check/transform
XML documents (for more information see http://xmlstar.sourceforge.net/)
xmlstarlet val -w dbf.xml
dbf.xml - valid
xmlstarlet val -w dmf.xml
dmf.xml:219: parser error : Opening and ending tag mismatch: NOM line 218 and ROLE
<INTITULE>Mary Jensen Matthews</INTITULE></ROLE><ROLE><PRENOM>Mat</PRENOM><NOM>D
                                                ^
dmf.xml:220: parser error : expected '>'
<INTITULE>Pat Healy</INTITULE></ROLE></ROLES>
                                           ^
dmf.xml:225: parser error : Opening and ending tag mismatch: ROLES line 217 and FILM
</FILM>
       ^
dmf.xml:705: parser error : expected '>'
</FILMS>
      ^
dmf.xml:706: parser error : Premature end of data in tag FILMS line 3

^
dmf.xml - invalid

########################################################################
#                                                                       
# 2. Test si un document est valide pour sa dtd                         
#    adv.xml : document valide      pour id.dtd                         
#    adn.xml : document non valide  pour id.dtd                         
#                                                                       
########################################################################

# 2a. en perl
testevdpe
   syntaxe : testevd fichier_XML fichier_DTD
testevdpe adv.xml id.dtd
<id>
 <nom>    BOND  </nom>
 <prenom> James </prenom>
</id>

Le document nommé adv.xml est valide pour sa dtd nommée id.dtd
testevdpe adn.xml id.dtd
<id>
 <nom>    BOND  </nom>
</id>XML::Checker ERROR-154: bad order of Elements Found=[nom] RE=[((nom)(prenom))]
	Context: line 5, column 0, byte 98

Le document nommé adn.xml est non valide pour sa dtd nommée id.dtd
# 2b. en php
testevdph
testevd.php (gH) 2012
  syntaxe : testevdph fichierXML fichierDTD
  exemple : testevdph dnv.xml id.dtd
testevdph adv.xml id.dtd
Document adv.xml bien formÃ© et valide pour id.dtd
testevdph adn.xml id.dtd
PHP Warning:  DOMDocument::validate(): Element id content does not follow the DTD, expecting (nom , prenom), got (nom ) in /home/gh/Bin/testevd.php on line 30
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testevd.php:0
PHP   2. DOMDocument->validate() /home/gh/Bin/testevd.php:30

 Erreur, document adn.xml non valide pour id.dtd
# 2c. en java
# 2d. avec rxp
rxp -V -s adv.xml
rxp -V -s adn.xml
Warning: Content model for id does not allow it to end here
 in unnamed entity at line 5 char 5 of file:///home/gh/public_html/tuteurs/adn.xml
# 2e. avec xmllint
?xmllint --valid --noout dbf.xml
?xmllint --valid --noout dmf.xml
# 2f. avec xmlstarlet
xmlstarlet val --help
XMLStarlet Toolkit: Validate XML document(s)
Usage: xml val <options> [ <xml-file-or-uri> ... ]
where <options>
  -w or --well-formed        - validate well-formedness only (default)
  -d or --dtd <dtd-file>     - validate against DTD
  -s or --xsd <xsd-file>     - validate against XSD schema
  -E or --embed              - validate using embedded DTD
  -r or --relaxng <rng-file> - validate against Relax-NG schema
  -e or --err                - print verbose error messages on stderr
  -b or --list-bad           - list only files which do not validate
  -g or --list-good          - list only files which validate
  -q or --quiet              - do not list files (return result code only)

NOTE: XML Schemas are not fully supported yet due to its incomplete
      support in libxml2 (see http://xmlsoft.org)

XMLStarlet is a command line toolkit to query/edit/check/transform
XML documents (for more information see http://xmlstar.sourceforge.net/)
xmlstarlet val -d id.dtd adv.xml
adv.xml - valid
xmlstarlet val -d id.dtd adn.xml
adn.xml:5: element id: validity error : Element id content does not follow the DTD, expecting (nom , prenom), got (nom )
</id>
     ^
adn.xml:3: element id: validity error : Element id content does not follow the DTD, expecting (nom , prenom), got (nom )
adn.xml - invalid

########################################################################
#                                                                       
# 3. Test si un document est valide pour sa xsd                         
#    axv.xml : document valide      pour id.xsd                         
#    axn.xml : document non valide  pour id.xsd                         
#                                                                       
########################################################################

# 3a. en perl
testevspe

   syntaxe : testevsp fichier[.xml] schema[.xsd] 

testevspe axv.xml id.xsd
<id xsi:noNamespaceSchemaLocation="id.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <nom>    BOND  </nom>
 <prenom> James </prenom>
</id>
Le document axv.xml est valide pour son schéma xsd.
testevspe axn.xml id.xsd

le document nommÃ© axn.xml n'est pas valide pour son schÃ©ma : Contents of element 'id' do not match content model '(nom,prenom)'.
<id xsi:noNamespaceSchemaLocation="id.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <nom>    BOND  </nom>
</id># 3b. en php
testevsph
testevs.php (gH) 2012
  syntaxe : testevsph fichierXML fichierXSL
  exemple : testevsph dv.xml id.xsd
testevsph axv.xml id.xsd
Document axv.xml bien formÃ© et valide pour id.xsd
testevsph axn.xml id.xsd
PHP Warning:  DOMDocument::schemaValidate(): Element 'id': Missing child element(s). Expected is ( prenom ). in /home/gh/Bin/testevs.php on line 38
PHP Stack trace:
PHP   1. {main}() /home/gh/Bin/testevs.php:0
PHP   2. DOMDocument->schemaValidate() /home/gh/Bin/testevs.php:38

 Erreur, document axn.xml non valide pour id.xsd
# 3c. en java
# 3d. avec xmlstarlet
xmlstarlet val -s id.xsd axv.xml
axv.xml - valid
xmlstarlet val -s id.xsd axn.xml
axn.xml - invalid

########################################################################
#                                                                       
# 4. Transformation XSL sur un document XML                             
#                                                                       
########################################################################

# 4a. en perl
# 4b. en php
# 4c. en java
# 4c. avec xmlstarlet
#xmlstarlet tr --help
XMLStarlet Toolkit: Transform XML document(s) using XSLT
Usage: xml tr [<options>] <xsl-file> {-p|-s <name>=<value>} [<xml-file>...]
where
  <xsl-file>      - main XSLT stylesheet for transformation
  <xml-file>      - input XML document file/URL (stdin is used if missing)
  <name>=<value>  - name and value of the parameter passed to XSLT processor
  -p              - parameter is XPATH expression ("'string'" to quote string)
  -s              - parameter is a string literal
<options> are:
  --help or -h    - diplay help message
  --omit-decl     - omit xml declaration <?xml version="1.0"?>
  --embed or -E   - allow applying embedded stylesheet
  --show-ext      - show list of extensions
  --val           - allow validate against DTDs or schemas
  --net           - allow fetch DTDs or entities over network
  --xinclude      - do XInclude processing on document input
  --maxdepth val  - increase the maximum depth
  --html          - input document(s) is(are) in HTML format
  --catalogs      - use SGML catalogs from $SGML_CATALOG_FILES
                    otherwise XML catalogs starting from
                    file:///etc/xml/catalog are activated by default

XMLStarlet is a command line toolkit to query/edit/check/transform
XML documents (for more information see http://xmlstar.sourceforge.net/)

Current implementation uses libxslt from GNOME codebase as XSLT processor
(see http://xmlsoft.org/ for more details)
#xmlstarlet val -s id.xsd axv.xml
# 4d. avec xsltproc
